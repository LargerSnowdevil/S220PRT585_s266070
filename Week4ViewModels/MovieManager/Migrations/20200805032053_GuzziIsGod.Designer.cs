// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieManager.Data;

namespace MovieManager.Migrations
{
    [DbContext(typeof(MovieDBContext))]
    [Migration("20200805032053_GuzziIsGod")]
    partial class GuzziIsGod
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieManager.Models.Catagory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Catagorys");
                });

            modelBuilder.Entity("MovieManager.Models.Movie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("catagoryIDid")
                        .HasColumnType("int");

                    b.Property<string>("contactAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("directorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("movieLanguage")
                        .HasColumnType("int");

                    b.Property<string>("movieName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("releaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("catagoryIDid");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MovieManager.Models.Movie", b =>
                {
                    b.HasOne("MovieManager.Models.Catagory", "catagoryID")
                        .WithMany("Movies")
                        .HasForeignKey("catagoryIDid");
                });
#pragma warning restore 612, 618
        }
    }
}
